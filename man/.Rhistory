##load packages
library(R.matlab)
library(dmri.tracking)
library(rgl)
data_path = '/Users/jiepeng/Dropbox/CRCNS_projects/FDD_estimation/codes/BJS/data/'
##load peak detection results from "example_HCP.py"
file_name= paste0(data_path,"HCP_peaks.mat")
peak_result= readMat(file_name) #read matlab data into R
##load peak detection results from "example_HCP.py"
file_name= paste0(data_path,"HCP_peaks.mat")
peak_result= readMat(file_name) #read matlab data into R
#data_path = '/Users/jiepeng/Dropbox/CRCNS_projects/FDD_estimation/codes/BJS/data/'
data_path = '/Users/seungyong/Dropbox/FDD_estimation/codes/BJS/data/'
##load peak detection results from "example_HCP.py"
file_name= paste0(data_path,"HCP_peaks.mat")
peak_result= readMat(file_name) #read matlab data into R
form_tractography<-function(result){
temp<-NULL
temp$braingrid<-result$braingrid
temp$loc<-result$loc
temp$map<-c(result$map)
temp$n.fiber<-c(result$n.fiber)
temp$n.fiber2<-c(result$n.fiber2)
temp$nn1<-c(result$nn1)
temp$nn2<-c(result$nn2)
temp$nn3<-c(result$nn3)
temp$rmap<-c(result$rmap)
temp$vec<-result$vec
temp$xgrid.sp<-c(result$xgrid.sp)
temp$ygrid.sp<-c(result$ygrid.sp)
temp$zgrid.sp<-c(result$zgrid.sp)
return(temp)
}
form_tractography(peak_result)
temp=form_tractography(peak_result)
## specify region to draw the tracking results
x_subr = 1:temp$nn1
y_subr = 1:temp$nn2
z_subr = 1:temp$nn3
## Apply Tracking Algorithm
nproj = 1  ## skip nproj voxles before termination
our.track <- v.track(v.obj=temp, xgrid.sp=temp$xgrid.sp, ygrid.sp=temp$ygrid.sp,
zgrid.sp=temp$zgrid.sp, braingrid=array(temp$braingrid,dim=c(3,length(x_subr),length(y_subr),length(z_subr))), elim=T, nproj=nproj,
vorient=c(1,1,1), elim.thres=20) # elim.tresh:  return indices of tracks of at least elim.thres length: use this information for quicker plotting
tobj <- our.track
tobj$sorted.update.ind
len(tobj$sorted.update.ind)
length(tobj$sorted.update.ind)
length(tobj$lens)
tobj$lens
## Feature extraction (e.g. number of fiber longer than a certain value)
length(tobj$lens>10)
## Feature extraction (e.g. number of fiber longer than a certain value)
sum(tobj$lens>10)
## Feature extraction (e.g. number of fiber longer than 10mm)
num_fiber=sum(tobj$lens>10)
